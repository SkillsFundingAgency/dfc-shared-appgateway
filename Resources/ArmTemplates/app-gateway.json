{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appGatewayName": {
            "type": "string",
            "metadata": {
                "description": "Name of the application gateway resource"
            }
        },
        "subnetRef": {
            "type": "string",
            "metadata": {
                "description": "Vnet subnet resource ID"
            }
        },
        "appGatewayTier": {
            "type": "string",
            "allowedValues": [
                "Standard_Small",
                "Standard_Medium",
                "Standard_Large",
                "WAF_Medium",
                "WAF_Large",
                "Standard_v2",
                "WAF_v2"
            ],
            "defaultValue": "Standard_Small",
            "metadata": {
                "description": "Name of the application gateway resource"
            }
        },
        "backendPools": {
            "type": "array",
            "metadata": {
                "description": "back end pool ip addresses"
            }
        },
        "routingRules": {
            "type": "array",
            "metadata": {
                "description": "routing"
            }
        },
        "capacity": {
            "type": "int",
            "minValue": 2,
            "maxValue": 75,
            "defaultValue": 2,
            "metadata": {
                "description": "Number of instances of the app gateway running"
            }
        },
        "privateIpAddress": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Set the private IP address for application gateway (public IP address only generated if empty)"
            }
        },
        "publicDnsLabel": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Set DNS label on public IP address for application gateway"
            }
        },
        "httpFrontendPort": {
            "type": "int",
            "defaultValue": 80,
            "metadata": {
                "description": "Http frontend port."
            }
        },
        "httpFrontendPortHttps": {
            "type": "int",
            "defaultValue": 443,
            "metadata": {
                "description": "Https frontend port."
            }
        },
        "backendPort": {
            "type": "int",
            "defaultValue": 80,
            "metadata": {
                "description": "application gateway back end port"
            }
        },
        "backendProtocol": {
            "type": "string",
            "allowedValues": [
                "Http",
                "Https"
            ],
            "defaultValue": "Http",
            "metadata": {
                "description": "application gateway back end protocol"
            }
        },
        "cookieBasedAffinity": {
            "type": "string",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "defaultValue": "Disabled",
            "metadata": {
                "description": "cookie based affinity"
            }
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the key vault."
            }
        },
        "keyVaultSecretName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the certificate/secret stored in key vault."
            }
        },
        "userAssignedIdentityName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the user assigned identity."
            }
        }
    },
    "variables": {
        "tier": {
            "Standard_Small": "Standard",
            "Standard_Medium": "Standard",
            "Standard_Large": "Standard",
            "WAF_Medium": "WAF",
            "WAF_Large": "WAF",
            "Standard_v2": "Standard_v2",
            "WAF_v2": "WAF_v2"
        },
        "frontendIpType": "[if(equals(length(parameters('privateIpAddress')),0),'public','private')]",
        "publicIPAddressName": "[concat(parameters('appGatewayName'), '-ip')]",
        "publicIPAddressProperties": {
            "withDnsLabel": {
                "publicIPAllocationMethod": "[if(contains(parameters('appGatewayTier'),'v2'), 'Static', 'Dynamic')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('publicDnsLabel')]"
                }
            },
            "withoutDnsLabel": {
                "publicIPAllocationMethod": "[if(contains(parameters('appGatewayTier'),'v2'), 'Static', 'Dynamic')]",
            }
        },
        "frontendIp": {
            "public": {
                "PublicIPAddress": {
                    "id":"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                }
            },
            "private": {
                "privateIpAddress": "[parameters('privateIpAddress')]",
                "privateIpAllocationMethod": "Static",
                "subnet": {
                    "id": "[parameters('subnetRef')]"
                }
            }
        },
        "copy": [
            {
                "name": "backendAddressPools",
                "count": "[length(parameters('backendPools'))]",
                "input": {
                    "name": "[parameters('backendPools')[copyIndex('backendAddressPools')].name]",
                    "properties": {
                      "BackendAddresses": [
                          {
                            "fqdn": "[parameters('backendPools')[copyIndex('backendAddressPools')].fqdn]"
                          }
                      ]
                    }
                }
            },
            {
                "name": "urlPathRules",
                "count": "[length(parameters('routingRules'))]",
                "input": {
                    "name": "[parameters('routingRules')[copyIndex('urlPathRules')].name]",
                    "properties": {
                        "backendAddressPool": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('appGatewayName'), parameters('routingRules')[copyIndex('urlPathRules')].backend)]"
                        },
                        "paths": "[parameters('routingRules')[copyIndex('urlPathRules')].paths]",
                        "backendHttpSettings": {
                            "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('appGatewayName'), 'appGatewayBackendHttpSettings')]"
                        }
                    }
                }
            }
        ]
    },
    "resources": [
        {
            "name": "[variables('publicIPAddressName')]",
            "apiVersion": "2018-08-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "condition": "[equals(length(parameters('privateIpAddress')),0)]",
            "location": "[resourceGroup().location]",
            "sku":{
                "name": "[if(contains(parameters('appGatewayTier'),'v2'), 'Standard', 'Basic')]"
            },
            "properties": "[if(equals(length(parameters('publicDnsLabel')),0), variables('publicIPAddressProperties').withoutDnsLabel, variables('publicIPAddressProperties').withDnsLabel)]"
        },
        {
            "name": "[parameters('appGatewayName')]",
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[variables('publicIPAddressName')]"
            ],
            "properties": {
                "sku": {
                    "name": "[parameters('appGatewayTier')]",
                    "tier": "[variables('tier')[parameters('appGatewayTier')]]",
                    "capacity": "[parameters('capacity')]"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[parameters('subnetRef')]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGatewayFrontendIP",
                        "properties": "[variables('frontendIp')[variables('frontendIpType')]]"
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "default-frontend-port",
                        "properties": {
                            "Port": "[parameters('httpFrontendPort')]"
                        }
                    }
                ],
                "backendAddressPools": "[variables('backendAddressPools')]",
                "backendHttpSettingsCollection": [
                  {
                    "name": "appGatewayBackendHttpSettings",
                    "properties": {
                      "Port": "[parameters('backendPort')]",
                      "Protocol": "[parameters('backendProtocol')]",
                      "CookieBasedAffinity": "[parameters('cookieBasedAffinity')]"
                    }
                  }
                ],
                "httpListeners": [
                  {
                    "name": "appGatewayHttpListener",
                    "properties": {
                      "FrontendIpConfiguration": {
                        "Id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                      },
                      "FrontendPort": {
                        "Id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/frontendPorts/default-frontend-port')]"
                      },
                      "Protocol": "Http",
                      "SslCertificate": null
                    }
                  }
                ],
                "urlPathMaps": [
                    {
                        "name": "default-path-map",
                        "properties": {
                            "defaultBackendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('appGatewayName'), parameters('backendPools')[0].name)]"
                            },
                            "defaultBackendHttpSettings": {
                                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('appGatewayName'), 'appGatewayBackendHttpSettings')]"
                            },
                            "pathRules": "[variables('urlPathRules')]"
                        }
                    }
                ],
                "requestRoutingRules": [
                  {
                    "Name": "defaultRoutingRule",
                    "properties": {
                      "RuleType": "PathBasedRouting",
                      "httpListener": {
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/httpListeners/appGatewayHttpListener')]"
                      },
                      "urlPathMap": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/urlPathMaps', parameters('appGatewayName'), 'default-path-map')]"
                      }
                    }
                  }
                ]
            }   
        }       
    ]
}